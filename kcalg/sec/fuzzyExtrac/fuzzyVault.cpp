//
//  fuzzyVault.cpp
//  kcalg
//
//  Created by knightc on 2019/7/19.
//  Copyright © 2019 knightc. All rights reserved.
//

/*导引：alic 的电影爱好集合为 A，电话号码为 tel-a，将 tel-a 使用集合 A 的某种编码方式加密，密文公布出去；
*如果bob 的x电影兴趣爱好集合为 B，则当 B 与集合 A 相似到预设值时，则可以使用 B 以某种方式解密密文，得到 alic 的电话号码
 *应用在社交、推广方面
 */
#include <stdio.h>



//step 1：原始秘密值为 k，使用纠错码编码 k 得到的值作为多项式系数（此时多项式确定）；
//step 2：将集合 A 逐个取值作为 x 的集合，代入多项式，得到（x，y）的集合 G1；G1 的点的个数必须大于多项式最高阶数
//step 3：构建不少于 G1 的噪声点（不再多项式上的点），得到集合 G2
//step 4：合并 G1、G2，得到输出集合 G
//解锁时，输入集合 B，将集合 B逐个取值，与 G 中的点进行匹配，至少要匹配到大于等于多项式最高阶数的点；得到这些点后进行多项式重构，恢复出多项式系数。对此系数进行纠错码解码，恢复 k 值
//解锁的破解复杂度，是从 G 中取出正确的多项式最高阶数个点的可能性。假如阶数为 8。G 有 2^8个点。则f破解难度为 (2^8) * (2^8-1)* ... * (2^8-8)
//****如果不想还原得到原始 k 值，则不需要纠错编码。使用 hash 或其它变化，可以将 k 的变化作为中间密钥
//****变种的话，可以再增加额外口令或者密钥因素，再来保护这个中间密钥

